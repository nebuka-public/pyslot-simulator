# language: ja
# 一般的なパチスロ機 (ジャグラーシリーズを参考にした抽象化) の内部ハードウェア構成を記述する Gherkin Feature。
# 目的: ソフトウェアシミュレータで必要となる抽象的ハード資源を洗い出し、後続のドメインロジック/インターフェース層を設計しやすくする。
# 注意: 実機固有の非公開仕様や製品固有IDの記述は避ける。一般的・公開情報レベルの抽象化に留める。

Feature: パチスロ筐体の内部ハードウェア抽象構成
  パチスロ(ジャグラー系)のシミュレーションに必要な内部ハード資源を定義し、
  今後のロジック層が参照するインターフェース境界を明確化する。

  Background:
    Given 3つの物理リールが存在し 1リールあたり N 個(例: 21~24)のシンボル(図柄)が円周上に配置されている
    And 各リールはステッピングモータ(またはパルスモータ)により一定ステップ角で回転制御される
    And 各リールには位置検出用のセンサー(フォトセンサー/マグネットセンサー)があり 原点と区画インデックスを検出できる
    And 筐体にはメインCPU/MCUと補助制御(サブ基板)があり メインはゲーム進行と抽選/RNGを担当する
    And RNGは擬似乱数生成器であり 毎フレーム(または一定周期)シードを更新し 抽選要求時に乱数を提供する
    And プログラム/固定データはROM(プログラムROM, グラフィック/ランプパターンテーブル等)に格納される
    And 可変データ(統計/設定/エラー履歴)はRAMおよび不揮発性EEPROM/フラッシュに保存できる
    And 入力デバイスとしてスタートレバー, Betボタン, 各リール停止ボタン, 1枚掛けボタン, MaxBetボタン, 扉スイッチ, 設定キーが存在する
    And 出力デバイスとして GOGO!ランプ, その他パネルLED, 7セグや液晶表示, サウンド発生回路, 払出制御(ホッパーモータ), リール照明が存在する
    And 払出装置にはコインセンサーがあり 払出枚数をカウント可能でエラー(詰まり/枚数異常)を検出する
    And ドア開閉センサーはメンテナンス/不正検知用に状態を提供する
    And 電源基板はAC入力からDC安定化電圧(+5V, +12V 等)を供給し 電圧異常はステータスラインで検出される
    And 基板ID/シリアルを読み取る機構があり ソフトは認証/改造検出に利用できる
    And タイマ/割り込み源(リール回転割り込み, 毎周期タイマ, 入力イベント)がメイン制御へイベントを通知する

  # インターフェース要求
  Scenario: リール制御インターフェース
    Given リール制御APIは 回転開始(start), 個別停止(stop reel i), 現在角度/シンボル問い合わせ(get position) を提供する
    When ソフトが回転開始を指示すると モータは一定加速後 定常速度で回転し 経過ステップ数が内部カウンタに累積される
    Then リール停止指示は 次に許可される停止ゾーン境界で確定し 原点センサーからのオフセットで最終シンボルが決定される

  Scenario: RNGインターフェース
    Given RNGは 32bit以上の内部状態を保持し 高頻度更新(例: 毎割り込み)で状態を変化させる
    When 抽選要求APIが呼ばれる
    Then 現在状態を元に次の乱数値を返し 同時に内部状態を進める
    And RNGはゲームロジックが要求する分布(均等/加重)変換用ユーティリティを提供する

  Scenario: 入力イベント取得
    Given 入力スイッチ群は デバウンス後の確定状態をポーリングまたは割り込みで提供する
    When プレイヤーがスタートレバーを操作する
    Then メインCPUは 有効なゲーム開始イベントを受理し ベット枚数と乱数抽選可能状態を確認する

  Scenario: ランプ/LED出力
    Given ランプ制御APIは ON/OFF, パターン点滅, フェード, 優先度管理を行う
    When ボーナス成立が内部で確定する
    Then GOGO!ランプ点灯パターンがトリガされ 優先度は通常演出より上位になる

  Scenario: 払出制御
    Given 払出モータ制御APIは 目標枚数とタイムアウト値を受け取り コインセンサーで枚数を計測する
    When ボーナスゲームで規定枚数を払い出す必要がある
    Then 目標枚数達成時にモータ停止し 枚数超過やタイムアウトはエラーコードとして報告される

  Scenario: セキュリティ/監査
    Given セキュリティAPIは ドア開閉状態, 設定キー挿抜, 基板ID, 異常電圧, タンパ検出 を問い合わせ可能
    When ドアが開いた
    Then ゲーム処理は一時停止し セキュリティログへイベント記録される

  Scenario: タイマ/割り込み
    Given タイマは 基準周期(例: 1ms or 10ms)でシステムティックをインクリメントする
    And リールセンサー割り込みは 特定角度通過時に発火する
    When 指定周期が経過した
    Then メインループは 入力更新, RNG更新, 演出進行, エラー監視 を順序定義通りに処理する

  # ジャグラー系特有の抽象要素
  Scenario: ボーナス成立検知タイミング
    Given 成立役は リール停止完了直後に全リール表示シンボルの組合せから算出される
    When 3リールすべてが停止した
    Then 内部ロジックは ボーナス(ビッグ/レギュラー)成立を判定し ランプ点灯/サウンドを遅延(数十ms以内)でトリガする

  Scenario: 設定差に関わる統計情報の保持
    Given 内部設定値(1~6など)は 不揮発領域に保持され 読み書きはセキュア操作に限定される
    When 統計要求が来た
    Then 総回転数, ボーナス各種回数, エラー履歴 がAPIで取得できる

  # シミュレータ側で必要となる抽象デバイスクラス例 (参考コメント)
  # - ReelMotor
  # - ReelSensor
  # - RNGEngine
  # - InputPanel (Lever, Buttons)
  # - LampController (GOGOLamp, PanelLED)
  # - PayoutController (Hopper, CoinSensor)
  # - SecurityModule (DoorSensor, BoardId, VoltageMonitor)
  # - SystemTimer / InterruptDispatcher
